#web sayfamıza tam olarak nasıl içerik sunmaya başlayabileceğimizden bahsedelim
#özellikle statik içerik sunumu üzerinde çalışıcam 
#html css resimler giib basit dosyalardan bahsediyorum 
http { 
    include mime.types;
     upstream backendserver { 
        # docker da 1111 diye ayarladım ben ondan bu şekilde 
        server 127.0.0.1:1111;
        server 127.0.0.1:2222;
        server 127.0.0.1:3333;
        server 127.0.0.1:4444;
    }
       
    server { 
        listen 8080; 
        # Proje kök klasörü
        root /Users/beyzaaslan/Desktop/mysite;
        location ~* /count/[0-9]{
            root /Users/beyzaaslan/Desktop/mysite;
            try_files  /index.html =404;                 
        }

       rewrite ^/number/(\w+) /count/$1 break;
#  bunun yapacağı şey her seferinde sunucuları gezerek isteği karşılayacak
       location / {
           proxy_pass http://backendserver/;
       }

          location ~* /number/[0-9]{
            root /Users/beyzaaslan/Desktop/mysite;
            try_files  /index.html =404;
        }


    #http://localhost:8080/fruits/ bunun içinde gösterir
        location /fruits {   #url i dizine eşler
            root /Users/beyzaaslan/Desktop/mysite;
        }
        #http://localhost:8080/carbs/ bunun içinde gösterir
        location /carbs {
            #alias takma adı vermek için kullanılır
           alias /Users/beyzaaslan/Desktop/mysite/fruits;
        }
        location /vegetables {
            alias /Users/beyzaaslan/Desktop/mysite;
            try_files /vegetables/veggies.html  ./index.html=404;
        }
        #http://localhost:8080/crops/  buunu http://localhost:8080/fruits/ buna yönlendiriyo
        location /crops {
           return 307 /fruits;
        }

    }
}
events {}
#bu konfigürasyon dosyası ile nginx servisini başlattığımızda,
#nginx servisi 80 portunu dinlemeye başlayacak ve localhost adresine gelen istekleri
#/usr/share/nginx/html dizinindeki dosyaları kullanarak yanıtlayacak.
